version: '3.8'

services:

  coin_app:
    image: coinapp:dev
    container_name: coin_app
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      coin_db:
        condition: service_started
    links:
      - coin_db
    environment:
      WAIT_HOSTS: coin_db:5432
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://coin_db:5432/coin
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_PARENT_DIRECTORY: /
      APP_PORT: ${APP_PORT}
    ports:
      - "${APP_PORT}:${APP_PORT}"
    volumes:
      - ${HOST_PARENT_DIRECTORY}:/coin


  coin_db:
    image: postgres
    container_name: coin_db
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: coin
    ports:
      - "${EXTERNAL_DB_PORT}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d coin" ]
      interval: 8s
      timeout: 4s
      retries: 4

  keycloak_web:
    image: quay.io/keycloak/keycloak:24.0.5
    container_name: keycloak_web
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloakdb:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password

      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8081
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false

      KC_LOG_LEVEL: info
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: start-dev
    depends_on:
        - keycloakdb
    ports:
        - "8081:8080"

  keycloakdb:
    image: postgres
    container_name: keycloak_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
volumes:
  postgres_data:
